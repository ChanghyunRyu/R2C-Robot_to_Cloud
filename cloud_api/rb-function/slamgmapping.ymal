apiVersion: apps/v1
kind: Deployment
metadata:
  name: ros-map-merge
  labels:
    app: roscluster
    node: ros-map-merge
spec:
  replicas: 1
  # The deployment handles all matching templated pods
  selector:
    matchLabels:
      node: ros-map-merge
  # Template for a replica.
  # The deployment makes sure that a POD containing the containers
  # defined below is always running.
  template:
    metadata:
      labels:
        node: ros-map-merge
    spec:
      # Wait roscore to be running before starting the pod.
      # An initContainer is executed when this pod is created
      # and tries to connect to the rocore which is running in
      # a container in the master pod deployment.
      # https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
      containers:
      # The real node container

      - name: rosmapmerge
        image: dks01972/map_merge:latest
        #command: ["/bin/sh", "-ec", "while :; do echo '.'; sleep 5 ; done"]
        env:
        - name: ROS_MASTER_URI
          value: http://192.168.123.128:31311
        - name: ROS_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        # When the roscore container stops or fails, all the node
        # containers need to be restarted because the ros network
        # configuration is lost.
        # This liveness probe restarts the node container if the
        # 'chatter' topic is not anymore listed in the ROS network.
        # This is required because the node doesn't fail automatically
        # when roscore stops / restarts.
        # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes
